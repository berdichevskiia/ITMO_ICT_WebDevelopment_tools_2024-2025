{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>\u0417\u0434\u0435\u0441\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043c\u043e\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"lw-1/lab-1/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161: \u0412\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 Docker \u0438 Alembic","text":""},{"location":"lw-1/lab-1/#_1","title":"\ud83d\udcd8 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 Python-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Docker, FastAPI \u0438 Alembic \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. \u0412\u0441\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 <code>app/</code>, \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 <code>Dockerfile</code> \u0438 <code>docker-compose</code>.</p>"},{"location":"lw-1/lab-1/#_2","title":"\ud83d\udcc1 \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>lr1/\n\u251c\u2500\u2500 .env                  # \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\n\u251c\u2500\u2500 Dockerfile            # \u0421\u0431\u043e\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\n\u251c\u2500\u2500 docker-compose.yaml  # \u041a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0430 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u251c\u2500\u2500 requirements.txt      # Python-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n\u251c\u2500\u2500 alembic.ini           # \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Alembic\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 main.py           # \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043c\u043e\u0434\u0443\u043b\u044c FastAPI\n\u2502   \u251c\u2500\u2500 database.py       # \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414\n\u2502   \u251c\u2500\u2500 start.sh          # \u0421\u043a\u0440\u0438\u043f\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\n\u2502   \u2514\u2500\u2500 repositories/     # \u041b\u043e\u0433\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n</code></pre>"},{"location":"lw-1/lab-1/#_3","title":"\ud83d\ude80 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a","text":""},{"location":"lw-1/lab-1/#_4","title":"\ud83d\udd27 \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>Docker</li> <li>Docker Compose</li> </ul>"},{"location":"lw-1/lab-1/#_5","title":"\u25b6\ufe0f \u0417\u0430\u043f\u0443\u0441\u043a","text":"<pre><code># \u041a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\n$ git clone &lt;repo-url&gt;\n$ cd lr1\n\n# \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\n$ cp .env.example .env\n\n# \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435\n$ docker-compose up --build\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443: http://localhost:8000</p>"},{"location":"lw-1/lab-1/#_6","title":"\ud83e\udde9 \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043a\u043e\u0434\u0430","text":""},{"location":"lw-1/lab-1/#mainpy","title":"\ud83d\udcc4 <code>main.py</code>","text":"<pre><code>from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello, World!\"}\n</code></pre> <p>\u041f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP GET \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0439 JSON-\u043e\u0442\u0432\u0435\u0442 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a \u043a\u043e\u0440\u043d\u044e API.</p>"},{"location":"lw-1/lab-1/#databasepy","title":"\ud83d\uddc3 <code>database.py</code>","text":"<pre><code>from sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\nDATABASE_URL = \"sqlite:///./test.db\"\nengine = create_engine(DATABASE_URL)\nSessionLocal = sessionmaker(bind=engine)\n</code></pre> <p>\u041c\u043e\u0434\u0443\u043b\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"lw-1/lab-1/#_7","title":"\ud83e\uddf1 \u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \u0438 \u043c\u043e\u0434\u0435\u043b\u0438","text":""},{"location":"lw-1/lab-1/#user","title":"\ud83d\udc64 User","text":"<p>\u0424\u0430\u0439\u043b: <code>repositories/user.py</code> - \u041c\u0435\u0442\u043e\u0434\u044b: <code>get_by_email</code>, <code>get_by_username</code>, <code>create</code>, <code>update_password</code> - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c: <code>User</code></p> <pre><code>async def get_by_email(self, db, email):\n    result = await db.execute(select(User).filter(User.email == email))\n    return result.scalars().first()\n</code></pre> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0430\u0440\u043e\u043b\u044f: <pre><code>hashed_password = get_password_hash(obj_in.password)\n</code></pre></p>"},{"location":"lw-1/lab-1/#task","title":"\ud83d\udccb Task","text":"<p>\u0424\u0430\u0439\u043b: <code>repositories/task.py</code> - \u041c\u0435\u0442\u043e\u0434: <code>get_by_event_id</code> - \u041c\u043e\u0434\u0435\u043b\u044c: <code>Task</code></p> <pre><code>statement = select(Task).filter(Task.event_id == event_id)\n</code></pre> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u043d\u0438\u0439, \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044e.</p>"},{"location":"lw-1/lab-1/#team","title":"\ud83d\udc65 Team","text":"<p>\u0424\u0430\u0439\u043b: <code>repositories/team.py</code> - \u041c\u0435\u0442\u043e\u0434\u044b: <code>get_event_teams</code>, <code>get_user_teams</code>, <code>get_by_user_event</code> - \u041c\u043e\u0434\u0435\u043b\u044c: <code>Team</code></p> <pre><code>select(Team).join(Registration).where(Registration.user_id == user.id)\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044e.</p>"},{"location":"lw-1/lab-1/#event","title":"\ud83c\udf89 Event","text":"<p>\u0424\u0430\u0439\u043b: <code>repositories/event.py</code> - \u041c\u0435\u0442\u043e\u0434: <code>filter_events_by_dates</code> - \u041c\u043e\u0434\u0435\u043b\u044c: <code>Event</code></p> <pre><code>if from_date:\n    query = query.filter(self.model.dt_event_start &gt;= from_date)\n</code></pre> <p>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043f\u043e \u0434\u0430\u0442\u0430\u043c \u043d\u0430\u0447\u0430\u043b\u0430/\u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f/\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438.</p>"},{"location":"lw-1/lab-1/#alembic","title":"\ud83d\udee0 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Alembic","text":""},{"location":"lw-1/lab-1/#alembic_1","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Alembic","text":"<pre><code>$ alembic init alembic\n</code></pre>"},{"location":"lw-1/lab-1/#_8","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<pre><code>$ alembic revision --autogenerate -m \"Initial migration\"\n</code></pre>"},{"location":"lw-1/lab-1/#_9","title":"\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439","text":"<pre><code>$ alembic upgrade head\n</code></pre>"},{"location":"lw-1/lab-1/#_10","title":"\ud83d\udcce \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","text":"<ul> <li>URL: <code>GET /</code></li> <li>\u041e\u0442\u0432\u0435\u0442: <code>{ \"message\": \"Hello, World!\" }</code></li> </ul> <p>\u041c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043b\u0438 cURL: <pre><code>$ curl http://localhost:8000/\n</code></pre></p> <p>\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439: https://github.com/berdichevskiia/ITMO_ICT_WebDevelopment_tools_2023-2024/tree/lr1</p>"}]}